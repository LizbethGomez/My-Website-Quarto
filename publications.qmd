---
title: Publications
format:
  html:
    toc: false
    page-layout: full
listing:
  contents: publications.yaml
  sort-ui: false
  filter-ui: false
  type: table
  sort: "date desc"
  date-format: "YYYY"
  fields: [title, date, Authors, Journal, PDF]
---


```{r}
library(tidyverse)
library(stringr)

# Safely extract data with fallbacks to NA
extract_field <- function(data, field, default = NA_character_) {
  map_chr(data, ~pluck(.x, field, .default = default))
}

# Load and parse publication data
all_pubs <- tryCatch({
  rmarkdown::pandoc_citeproc_convert("files/Exported Items.ris", type = "list")
}, error = function(e) {
  stop("Failed to read the .ris file. Please check for formatting issues.")
})

# Extract relevant fields with safe fallbacks
ids <- extract_field(all_pubs, "id")
local_files <- file.path("publications", paste0(ids, ".pdf"))
files <- ifelse(file.exists(local_files), local_files, NA_character_)

dois <- extract_field(all_pubs, "DOI")
journals <- extract_field(all_pubs, "container-title")
titles <- extract_field(all_pubs, "title")
years <- map_dbl(all_pubs, ~pluck(.x, "issued", "date-parts", 1, 1, .default = NA_real_))
authors <- map(all_pubs, ~pluck(.x, "author", .default = list()))

# Extract author family names and initials safely
safe_family <- function(x) ifelse(is.null(pluck(x, "family")), NA_character_, pluck(x, "family"))
safe_given <- function(x) ifelse(is.null(pluck(x, "given")), NA_character_, str_extract_all(pluck(x, "given"), "[A-Z]"))

family_names <- map(authors, ~map_chr(.x, safe_family))
first_initials <- map(authors, ~map_chr(.x, ~str_c(map_chr(safe_given(.x), str_c, collapse = ""), collapse = "")))

# Handle cases where author lists might be empty
family_names <- map_chr(family_names, ~ifelse(length(.x) == 0, "NA", str_c(.x, collapse = ", ")))
first_initials <- map_chr(first_initials, ~ifelse(length(.x) == 0, "NA", str_c(.x, collapse = ", ")))

# Create the final publications tibble
pubs <- tibble(
  doi = dois,
  journal = journals,
  title = titles,
  year = years,
  authors = str_c(family_names, " ", first_initials),
  pdf = files
) %>%
  mutate(
    authors = str_replace_all(authors, "Gomez L,", "**Gomez L,**"),
    authors = str_replace_all(authors, "Gomez L$", "**Gomez L**"),
    authors = str_replace_all(authors, "Gomez LH", "**Gomez LF**"),
    pdf = ifelse(is.na(pdf), "", str_glue('
    |
        <a href="{pdf}">
        <i class="bi bi-file-earmark-pdf-fill"></i>
        </a>
    ')),
    path = ifelse(is.na(doi), "", str_glue("https://doi.org/{doi}")),
    date = ifelse(is.na(year), "unknown", str_glue("{year}-01-01")),
    text = str_glue('
    - title: "{title}"
      Authors: "{authors}"
      date: {date}
      path: {path}
      Journal: "{journal}"
      PDF: {pdf}
    ')
  )

# Write formatted output to publications.yaml
write_lines(c(pubs$text), "publications.yaml")
```